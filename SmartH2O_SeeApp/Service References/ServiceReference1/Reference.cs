//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SmartH2O_SeeApp.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ParameterType", Namespace="http://schemas.datacontract.org/2004/07/SmartH2O_Service")]
    public enum ParameterType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PH = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CI2 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        H3 = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HourlySummarizedValues", Namespace="http://schemas.datacontract.org/2004/07/SmartH2O_Service")]
    [System.SerializableAttribute()]
    public partial class HourlySummarizedValues : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float AverangeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float HourField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float MaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float MinField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Averange {
            get {
                return this.AverangeField;
            }
            set {
                if ((this.AverangeField.Equals(value) != true)) {
                    this.AverangeField = value;
                    this.RaisePropertyChanged("Averange");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Hour {
            get {
                return this.HourField;
            }
            set {
                if ((this.HourField.Equals(value) != true)) {
                    this.HourField = value;
                    this.RaisePropertyChanged("Hour");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Max {
            get {
                return this.MaxField;
            }
            set {
                if ((this.MaxField.Equals(value) != true)) {
                    this.MaxField = value;
                    this.RaisePropertyChanged("Max");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Min {
            get {
                return this.MinField;
            }
            set {
                if ((this.MinField.Equals(value) != true)) {
                    this.MinField = value;
                    this.RaisePropertyChanged("Min");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlarmData", Namespace="http://schemas.datacontract.org/2004/07/SmartH2O_Service")]
    [System.SerializableAttribute()]
    public partial class AlarmData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AlarmDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float AlarmValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SmartH2O_SeeApp.ServiceReference1.ParameterType ParameterTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float ParametervalueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AlarmDescription {
            get {
                return this.AlarmDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.AlarmDescriptionField, value) != true)) {
                    this.AlarmDescriptionField = value;
                    this.RaisePropertyChanged("AlarmDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float AlarmValue {
            get {
                return this.AlarmValueField;
            }
            set {
                if ((this.AlarmValueField.Equals(value) != true)) {
                    this.AlarmValueField = value;
                    this.RaisePropertyChanged("AlarmValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SmartH2O_SeeApp.ServiceReference1.ParameterType ParameterType {
            get {
                return this.ParameterTypeField;
            }
            set {
                if ((this.ParameterTypeField.Equals(value) != true)) {
                    this.ParameterTypeField = value;
                    this.RaisePropertyChanged("ParameterType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Parametervalue {
            get {
                return this.ParametervalueField;
            }
            set {
                if ((this.ParametervalueField.Equals(value) != true)) {
                    this.ParametervalueField = value;
                    this.RaisePropertyChanged("Parametervalue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IServiceSmartH2O")]
    public interface IServiceSmartH2O {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSmartH2O/getHourlySummarizedByDay", ReplyAction="http://tempuri.org/IServiceSmartH2O/getHourlySummarizedByDayResponse")]
        SmartH2O_SeeApp.ServiceReference1.HourlySummarizedValues[] getHourlySummarizedByDay(SmartH2O_SeeApp.ServiceReference1.ParameterType parameter, System.DateTime day);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSmartH2O/getHourlySummarizedByDay", ReplyAction="http://tempuri.org/IServiceSmartH2O/getHourlySummarizedByDayResponse")]
        System.Threading.Tasks.Task<SmartH2O_SeeApp.ServiceReference1.HourlySummarizedValues[]> getHourlySummarizedByDayAsync(SmartH2O_SeeApp.ServiceReference1.ParameterType parameter, System.DateTime day);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSmartH2O/getDailyAlarmsInformation", ReplyAction="http://tempuri.org/IServiceSmartH2O/getDailyAlarmsInformationResponse")]
        SmartH2O_SeeApp.ServiceReference1.AlarmData[] getDailyAlarmsInformation();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSmartH2O/getDailyAlarmsInformation", ReplyAction="http://tempuri.org/IServiceSmartH2O/getDailyAlarmsInformationResponse")]
        System.Threading.Tasks.Task<SmartH2O_SeeApp.ServiceReference1.AlarmData[]> getDailyAlarmsInformationAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceSmartH2OChannel : SmartH2O_SeeApp.ServiceReference1.IServiceSmartH2O, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceSmartH2OClient : System.ServiceModel.ClientBase<SmartH2O_SeeApp.ServiceReference1.IServiceSmartH2O>, SmartH2O_SeeApp.ServiceReference1.IServiceSmartH2O {
        
        public ServiceSmartH2OClient() {
        }
        
        public ServiceSmartH2OClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceSmartH2OClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceSmartH2OClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceSmartH2OClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public SmartH2O_SeeApp.ServiceReference1.HourlySummarizedValues[] getHourlySummarizedByDay(SmartH2O_SeeApp.ServiceReference1.ParameterType parameter, System.DateTime day) {
            return base.Channel.getHourlySummarizedByDay(parameter, day);
        }
        
        public System.Threading.Tasks.Task<SmartH2O_SeeApp.ServiceReference1.HourlySummarizedValues[]> getHourlySummarizedByDayAsync(SmartH2O_SeeApp.ServiceReference1.ParameterType parameter, System.DateTime day) {
            return base.Channel.getHourlySummarizedByDayAsync(parameter, day);
        }
        
        public SmartH2O_SeeApp.ServiceReference1.AlarmData[] getDailyAlarmsInformation() {
            return base.Channel.getDailyAlarmsInformation();
        }
        
        public System.Threading.Tasks.Task<SmartH2O_SeeApp.ServiceReference1.AlarmData[]> getDailyAlarmsInformationAsync() {
            return base.Channel.getDailyAlarmsInformationAsync();
        }
    }
}
